name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKERHUB_USERNAME: friendy21
  IMAGE_NAME: cicd-nomad-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.sha }}
            BUILD_DATE=${{ github.event.head_commit.timestamp }}

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.MANAGEMENT_SERVER_IP }} >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Deploy to Nomad via Management Server
        run: |
          # Copy Nomad job file to management server
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            nomad/app.nomad \
            root@${{ secrets.MANAGEMENT_SERVER_IP }}:/tmp/app.nomad
          
          # Deploy using Nomad with ACL token
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
            root@${{ secrets.MANAGEMENT_SERVER_IP }} << 'ENDSSH'
          set -e
          
          # Export Nomad token
          export NOMAD_TOKEN="${{ secrets.NOMAD_TOKEN }}"
          export NOMAD_ADDR="http://127.0.0.1:4646"
          
          # Update image in job file
          sed -i "s|REPLACE_IMAGE|${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest|g" /tmp/app.nomad
          
          # Validate and run the job
          nomad job validate /tmp/app.nomad
          nomad job run /tmp/app.nomad
          
          # Check status
          sleep 10
          nomad job status app
          ENDSSH
